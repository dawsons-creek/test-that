[project]
name = "test-that"
version = "0.1.0"
description = "A Python testing library that tells you what failed, not makes you guess"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
keywords = ["testing", "test", "unittest", "assertion"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Testing",
]
dependencies = [
    "pyyaml>=6.0.2",
    "tomli>=1.2.0; python_version<'3.11'",
]

[project.urls]
Homepage = "https://github.com/dawsons-creek/test-that"
Repository = "https://github.com/dawsons-creek/test-that"
Issues = "https://github.com/dawsons-creek/test-that/issues"

[project.scripts]
that = "test_that.__main__:main"
test_that = "test_that.__main__:main"
tt = "test_that.__main__:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/test_that"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "pyright>=1.1.0",
]

[tool.test_that]
test_dir = "tests"
pattern = "test_*.py"
verbose = false
color = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
norecursedirs = ["src", ".git", ".tox", "dist", "build", "*.egg"]

[tool.ruff]
line-length = 88
target-version = "py38"
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
]

[tool.ruff.lint.isort]
known-first-party = ["test_that"]

[tool.pyright]
include = ["src", "tests"]
exclude = ["**/__pycache__"]
venvPath = "."
venv = ".venv"
pythonVersion = "3.8"
typeCheckingMode = "basic"
reportMissingImports = true
reportMissingTypeStubs = false
reportUnusedImport = true
reportUnusedClass = true
reportUnusedFunction = true
reportDuplicateImport = true
